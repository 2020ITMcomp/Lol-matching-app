// Generated by view binder compiler. Do not edit!
package net.simplifiedcoding.firebaseauthtutorial.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ListView;
import android.widget.RelativeLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import net.simplifiedcoding.firebaseauthtutorial.R;

public final class Hojin2Binding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final ListView listView1;

  private Hojin2Binding(@NonNull RelativeLayout rootView, @NonNull ListView listView1) {
    this.rootView = rootView;
    this.listView1 = listView1;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static Hojin2Binding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static Hojin2Binding inflate(@NonNull LayoutInflater inflater, @Nullable ViewGroup parent,
      boolean attachToParent) {
    View root = inflater.inflate(R.layout.hojin_2, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static Hojin2Binding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    String missingId;
    missingId: {
      ListView listView1 = rootView.findViewById(R.id.listView1);
      if (listView1 == null) {
        missingId = "listView1";
        break missingId;
      }
      return new Hojin2Binding((RelativeLayout) rootView, listView1);
    }
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
