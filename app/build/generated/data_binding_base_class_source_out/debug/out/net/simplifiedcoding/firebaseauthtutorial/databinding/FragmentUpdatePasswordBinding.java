// Generated by view binder compiler. Do not edit!
package net.simplifiedcoding.firebaseauthtutorial.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.FrameLayout;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.ProgressBar;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import net.simplifiedcoding.firebaseauthtutorial.R;

public final class FragmentUpdatePasswordBinding implements ViewBinding {
  @NonNull
  private final FrameLayout rootView;

  @NonNull
  public final Button buttonAuthenticate;

  @NonNull
  public final Button buttonUpdate;

  @NonNull
  public final TextView editTextName;

  @NonNull
  public final EditText editTextNewPassword;

  @NonNull
  public final EditText editTextNewPasswordConfirm;

  @NonNull
  public final EditText editTextPassword;

  @NonNull
  public final ImageView imageView;

  @NonNull
  public final RelativeLayout layoutHead;

  @NonNull
  public final LinearLayout layoutPassword;

  @NonNull
  public final LinearLayout layoutUpdatePassword;

  @NonNull
  public final ProgressBar progressbar;

  private FragmentUpdatePasswordBinding(@NonNull FrameLayout rootView,
      @NonNull Button buttonAuthenticate, @NonNull Button buttonUpdate,
      @NonNull TextView editTextName, @NonNull EditText editTextNewPassword,
      @NonNull EditText editTextNewPasswordConfirm, @NonNull EditText editTextPassword,
      @NonNull ImageView imageView, @NonNull RelativeLayout layoutHead,
      @NonNull LinearLayout layoutPassword, @NonNull LinearLayout layoutUpdatePassword,
      @NonNull ProgressBar progressbar) {
    this.rootView = rootView;
    this.buttonAuthenticate = buttonAuthenticate;
    this.buttonUpdate = buttonUpdate;
    this.editTextName = editTextName;
    this.editTextNewPassword = editTextNewPassword;
    this.editTextNewPasswordConfirm = editTextNewPasswordConfirm;
    this.editTextPassword = editTextPassword;
    this.imageView = imageView;
    this.layoutHead = layoutHead;
    this.layoutPassword = layoutPassword;
    this.layoutUpdatePassword = layoutUpdatePassword;
    this.progressbar = progressbar;
  }

  @Override
  @NonNull
  public FrameLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentUpdatePasswordBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentUpdatePasswordBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_update_password, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentUpdatePasswordBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    String missingId;
    missingId: {
      Button buttonAuthenticate = rootView.findViewById(R.id.button_authenticate);
      if (buttonAuthenticate == null) {
        missingId = "buttonAuthenticate";
        break missingId;
      }
      Button buttonUpdate = rootView.findViewById(R.id.button_update);
      if (buttonUpdate == null) {
        missingId = "buttonUpdate";
        break missingId;
      }
      TextView editTextName = rootView.findViewById(R.id.edit_text_name);
      if (editTextName == null) {
        missingId = "editTextName";
        break missingId;
      }
      EditText editTextNewPassword = rootView.findViewById(R.id.edit_text_new_password);
      if (editTextNewPassword == null) {
        missingId = "editTextNewPassword";
        break missingId;
      }
      EditText editTextNewPasswordConfirm = rootView.findViewById(R.id.edit_text_new_password_confirm);
      if (editTextNewPasswordConfirm == null) {
        missingId = "editTextNewPasswordConfirm";
        break missingId;
      }
      EditText editTextPassword = rootView.findViewById(R.id.edit_text_password);
      if (editTextPassword == null) {
        missingId = "editTextPassword";
        break missingId;
      }
      ImageView imageView = rootView.findViewById(R.id.image_view);
      if (imageView == null) {
        missingId = "imageView";
        break missingId;
      }
      RelativeLayout layoutHead = rootView.findViewById(R.id.layoutHead);
      if (layoutHead == null) {
        missingId = "layoutHead";
        break missingId;
      }
      LinearLayout layoutPassword = rootView.findViewById(R.id.layoutPassword);
      if (layoutPassword == null) {
        missingId = "layoutPassword";
        break missingId;
      }
      LinearLayout layoutUpdatePassword = rootView.findViewById(R.id.layoutUpdatePassword);
      if (layoutUpdatePassword == null) {
        missingId = "layoutUpdatePassword";
        break missingId;
      }
      ProgressBar progressbar = rootView.findViewById(R.id.progressbar);
      if (progressbar == null) {
        missingId = "progressbar";
        break missingId;
      }
      return new FragmentUpdatePasswordBinding((FrameLayout) rootView, buttonAuthenticate,
          buttonUpdate, editTextName, editTextNewPassword, editTextNewPasswordConfirm,
          editTextPassword, imageView, layoutHead, layoutPassword, layoutUpdatePassword,
          progressbar);
    }
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
