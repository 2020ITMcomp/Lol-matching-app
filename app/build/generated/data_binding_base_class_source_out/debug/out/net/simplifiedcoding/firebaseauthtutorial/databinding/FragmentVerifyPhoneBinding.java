// Generated by view binder compiler. Do not edit!
package net.simplifiedcoding.firebaseauthtutorial.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.FrameLayout;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.ProgressBar;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import com.hbb20.CountryCodePicker;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import net.simplifiedcoding.firebaseauthtutorial.R;

public final class FragmentVerifyPhoneBinding implements ViewBinding {
  @NonNull
  private final FrameLayout rootView;

  @NonNull
  public final Button buttonSendVerification;

  @NonNull
  public final Button buttonVerify;

  @NonNull
  public final CountryCodePicker ccp;

  @NonNull
  public final EditText editTextCode;

  @NonNull
  public final TextView editTextName;

  @NonNull
  public final EditText editTextPhone;

  @NonNull
  public final ImageView imageView;

  @NonNull
  public final RelativeLayout layoutHead;

  @NonNull
  public final LinearLayout layoutPhone;

  @NonNull
  public final LinearLayout layoutVerification;

  @NonNull
  public final ProgressBar progressbar;

  @NonNull
  public final ProgressBar progressbarPic;

  private FragmentVerifyPhoneBinding(@NonNull FrameLayout rootView,
      @NonNull Button buttonSendVerification, @NonNull Button buttonVerify,
      @NonNull CountryCodePicker ccp, @NonNull EditText editTextCode,
      @NonNull TextView editTextName, @NonNull EditText editTextPhone, @NonNull ImageView imageView,
      @NonNull RelativeLayout layoutHead, @NonNull LinearLayout layoutPhone,
      @NonNull LinearLayout layoutVerification, @NonNull ProgressBar progressbar,
      @NonNull ProgressBar progressbarPic) {
    this.rootView = rootView;
    this.buttonSendVerification = buttonSendVerification;
    this.buttonVerify = buttonVerify;
    this.ccp = ccp;
    this.editTextCode = editTextCode;
    this.editTextName = editTextName;
    this.editTextPhone = editTextPhone;
    this.imageView = imageView;
    this.layoutHead = layoutHead;
    this.layoutPhone = layoutPhone;
    this.layoutVerification = layoutVerification;
    this.progressbar = progressbar;
    this.progressbarPic = progressbarPic;
  }

  @Override
  @NonNull
  public FrameLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentVerifyPhoneBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentVerifyPhoneBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_verify_phone, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentVerifyPhoneBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    String missingId;
    missingId: {
      Button buttonSendVerification = rootView.findViewById(R.id.button_send_verification);
      if (buttonSendVerification == null) {
        missingId = "buttonSendVerification";
        break missingId;
      }
      Button buttonVerify = rootView.findViewById(R.id.button_verify);
      if (buttonVerify == null) {
        missingId = "buttonVerify";
        break missingId;
      }
      CountryCodePicker ccp = rootView.findViewById(R.id.ccp);
      if (ccp == null) {
        missingId = "ccp";
        break missingId;
      }
      EditText editTextCode = rootView.findViewById(R.id.edit_text_code);
      if (editTextCode == null) {
        missingId = "editTextCode";
        break missingId;
      }
      TextView editTextName = rootView.findViewById(R.id.edit_text_name);
      if (editTextName == null) {
        missingId = "editTextName";
        break missingId;
      }
      EditText editTextPhone = rootView.findViewById(R.id.edit_text_phone);
      if (editTextPhone == null) {
        missingId = "editTextPhone";
        break missingId;
      }
      ImageView imageView = rootView.findViewById(R.id.image_view);
      if (imageView == null) {
        missingId = "imageView";
        break missingId;
      }
      RelativeLayout layoutHead = rootView.findViewById(R.id.layoutHead);
      if (layoutHead == null) {
        missingId = "layoutHead";
        break missingId;
      }
      LinearLayout layoutPhone = rootView.findViewById(R.id.layoutPhone);
      if (layoutPhone == null) {
        missingId = "layoutPhone";
        break missingId;
      }
      LinearLayout layoutVerification = rootView.findViewById(R.id.layoutVerification);
      if (layoutVerification == null) {
        missingId = "layoutVerification";
        break missingId;
      }
      ProgressBar progressbar = rootView.findViewById(R.id.progressbar);
      if (progressbar == null) {
        missingId = "progressbar";
        break missingId;
      }
      ProgressBar progressbarPic = rootView.findViewById(R.id.progressbar_pic);
      if (progressbarPic == null) {
        missingId = "progressbarPic";
        break missingId;
      }
      return new FragmentVerifyPhoneBinding((FrameLayout) rootView, buttonSendVerification,
          buttonVerify, ccp, editTextCode, editTextName, editTextPhone, imageView, layoutHead,
          layoutPhone, layoutVerification, progressbar, progressbarPic);
    }
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
